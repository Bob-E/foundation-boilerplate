---
title: Grid
description: Help designer and developers to code a strong set of guideline for forms with the Foundation framework
page_title: Responsive grid
page_emphasis: Grid system by example
layout: components
---

.row
  - 12.times do |i|
    div class="small-1 columns"
      .m-grid--display
        - 10.times do
          br


.row
  .medium-8.medium-centered.columns
    markdown:
      ## Problem

      You’ve got tons of content, each needing different sized vertical columns, and you don’t know how to quick and easily get it all done.

    .row
      .medium-8.medium-centered.columns
        .row
          .small-3.columns
            .m-grid--display
              '.small-3.columns
          .small-3.columns
            .m-grid--display
              '.small-3.columns
          .small-3.columns
            .m-grid--display
              '.small-3.columns
          .small-3.columns
            .m-grid--display
              '.small-3.columns
        .row
          .large-6.columns
            .m-grid--display
              '.large-6.columns
          .large-6.columns
            .m-grid--display
              '.large-6.columns

    markdown:
      ## Solution

      __The awesome grid__! The grid is built around 2 key elements: `rows` & `columns`.

        1. `rows` create a max-width and contain the columns;
        2. `columns` create the final structure.

      _Everything on your page_ that you don’t give a specific structural style to should live in a `row.

      ## How to Use

      Using this framework is easy. Here’s how your code will look when you use a series of `div` tags to create vertical columns.

.layout-section--inverse
  .row
    .medium-10.medium-centered.columns

      h4 HTML
      markdown:
        ~~~ html
        <div class="row">
          <div class="small-4 columns">...</div>
          <div class="small-4 columns">...</div>
          <div class="small-4 columns">...</div>
        </div>
        <div class="row">
          <div class="large-6 columns">...</div>
          <div class="large-6 columns">...</div>
        </div>
        ~~~

.row
  .medium-8.medium-centered.columns
    markdown:
      ## Nesting Support

      In the Grid you can nest columns down as far as you’d like. Just embed rows inside columns and go from there. Each embedded row can contain up to number `$total-columns` defined in `_custom-settings.scss`.

      ## Grid uneven

      Here’s how to center an uneven number of items with the grid system.

.row
  .small-6.small-centered.columns
    div
      .small-4.columns
        .m-grid--display
          '.small-4.columns
      .small-4.columns
        .m-grid--display
          '.small-4.columns
      .small-4.columns
        .m-grid--display
          '.small-4.columns

    div
      .small-4.columns
        .m-grid--display
          '.small-4.columns
      .small-4.columns
        .m-grid--display
          '.small-4.columns
      .small-4.columns
        .m-grid--display
          '.small-4.columns

    div
      .small-4.small-push-2.columns
        .m-grid--display
          '.small-4.small-push-2.columns
      .small-4.small-pull-2.columns
        .m-grid--display
          '.small-4.small-pull-2.columns

.layout-section--inverse
  .row
    .medium-10.medium-centered.columns

      h4 HTML
      markdown:
        ~~~ html
        <div class="small-6 small-centered columns">
          <div class="row">
            <div class="small-4 columns">
              (...)
            </div>
            <div class="small-4 columns">
              (...)
            </div>
            <div class="small-4 columns">
              (...)
            </div>
          </div>
          <div class="row">
            <div class="small-4 columns">
              (...)
            </div>
            <div class="small-4 columns">
              (...)
            </div>
            <div class="small-4 columns">
              (...)
            </div>
          </div>
          <div class="row">
            <div class="small-4 small-push-2 columns">
              (...)
            </div>
            <div class="small-4 small-pull-2 columns">
              (...)
            </div>
          </div>
        </div>

        ~~~

.row
  .medium-8.medium-centered.columns
    p The push/pull are why we needed a base-12 grid: While the layout appears to have three columns, it really needs to nudge the last two a little ways in. The result is a symmetrical layout that doesn't seem to have left anyone out.
